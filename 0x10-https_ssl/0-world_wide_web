#!/usr/bin/env bash
#!/bin/bash

# Function to display information about a subdomain
display_info() {
    local domain="$1"
    local subdomain="$2"
    local record_info

    # Separately declare and assign to avoid masking return values
    # Properly quote variables to prevent globbing and word splitting
    record_info=$(dig "$subdomain.$domain" | grep -A1 "ANSWER SECTION:" | tail -n1 | awk '{print $5}')

    if [[ -z "$record_info" ]]; then
        echo "The subdomain $subdomain does not have a A record or does not exist."
    else
        echo "The subdomain $subdomain is a A record and points to $record_info"
    fi
}

# Ensure domain and subdomain are provided
if [ -z "$1" ]; then
    echo "Usage: $0 <domain> [subdomain]"
    echo "Example: $0 example.com www"
    exit 1
fi

domain="$1"
subdomain="$2"

# If a subdomain is specified, display its info. Otherwise, show info for a list of common subdomains.
if [ -n "$subdomain" ]; then
    display_info "$domain" "$subdomain"
else
    # Default list of subdomains to check if only domain is provided
    declare -a subdomains=("www" "lb-01" "web-01" "web-02")
    for sd in "${subdomains[@]}"; do
        display_info "$domain" "$sd"
    done
fi
